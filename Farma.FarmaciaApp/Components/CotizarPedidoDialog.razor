@using Farma.FarmaciaApp.Models

<MudDialog Class="cotizar-dialog">
    <DialogContent>
        <MudStack Spacing="3">
            <MudText Typo="Typo.h6">Cotizar pedido @Pedido.NumeroPedido</MudText>
            <MudText Typo="Typo.body2" Class="text-secondary">@Pedido.PacienteNombre · @Pedido.Direccion</MudText>

            <MudAlert Severity="Severity.Info" Variant="Variant.Text">
                Distancia a la farmacia: @Farma.Shared.Utils.FormatUtils.FormatDistance(Pedido.DistanciaKm)
            </MudAlert>

            <MudForm @ref="_form">
                <MudStack Spacing="2">
                    <MudNumericField @bind-Value="_model.Monto" Label="Monto total (ARS)" Variant="Variant.Filled" Required="true" Immediate="true" Min="0" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.AttachMoney" Placeholder="0,00" />
                    <MudNumericField @bind-Value="_model.TiempoEntregaMinutos" Label="Tiempo estimado de entrega (minutos)" Variant="Variant.Filled" Min="0" Max="360" />
                    <MudTextField @bind-Value="_model.Mensaje" Label="Notas para el cliente" Variant="Variant.Filled" Placeholder="Ej: Envío express sujeto a stock" Lines="3" />
                </MudStack>
            </MudForm>

            <MudPaper Elevation="0" Class="pa-3 mud-border-radius-medium">
                <MudText Typo="Typo.subtitle2" Class="mb-2">Recetas adjuntas</MudText>
                <MudChipSet>
                    @foreach (var receta in Pedido.Recetas)
                    {
                        <MudChip Color="Color.Secondary" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Description">
                            @receta.NombreArchivo
                        </MudChip>
                    }
                </MudChipSet>
            </MudPaper>
        </MudStack>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Text" OnClick="Cancelar">Cancelar</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="_isProcessing" OnClick="Confirmar">
            Enviar cotización
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    private readonly CotizacionModel _model = new();
    private MudForm? _form;
    private bool _isProcessing;

    [CascadingParameter] private MudDialogInstance MudDialog { get; set; } = default!;
    [Parameter] public PharmacyOrder Pedido { get; set; } = default!;

    private async Task Confirmar()
    {
        if (_form is null)
        {
            return;
        }

        await _form.Validate();
        if (!_form.IsValid || !_model.Monto.HasValue)
        {
            return;
        }

        _isProcessing = true;
        var tiempo = _model.TiempoEntregaMinutos.HasValue && _model.TiempoEntregaMinutos.Value > 0
            ? TimeSpan.FromMinutes(_model.TiempoEntregaMinutos.Value)
            : (TimeSpan?)null;

        var result = new CotizacionResult(_model.Monto.Value, tiempo, _model.Mensaje);
        MudDialog.Close(DialogResult.Ok(result));
    }

    private void Cancelar() => MudDialog.Cancel();

    private class CotizacionModel
    {
        public decimal? Monto { get; set; }
        public int? TiempoEntregaMinutos { get; set; }
        public string? Mensaje { get; set; }
    }

    public record CotizacionResult(decimal Monto, TimeSpan? TiempoEntrega, string? Mensaje);
}
