@inject Farma.FarmaciaApp.Services.PharmacyAuthState AuthState
@inject Farma.FarmaciaApp.Services.PedidosService PedidosService
@implements IDisposable

@if (!AuthState.IsAuthenticated)
{
    <MudText Typo="Typo.body1" Class="pa-4">
        Iniciá sesión para acceder a los pedidos disponibles.
    </MudText>
}
else
{
    <MudDrawerHeader Class="drawer-header">
        <MudStack Spacing="2">
            <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
                <MudAvatar Size="Size.Medium" Class="credential-avatar">
                    <MudIcon Icon="@Icons.Material.Filled.LocalPharmacy" />
                </MudAvatar>
                <MudStack Spacing="0">
                    <MudText Typo="Typo.subtitle1">@AuthState.Current?.Nombre</MudText>
                    <MudText Typo="Typo.caption" Class="drawer-subtitle">@AuthState.Current?.Direccion</MudText>
                </MudStack>
            </MudStack>
        </MudStack>
    </MudDrawerHeader>

    <MudNavMenu Class="mt-3">
        <MudNavLink Href="/pedidos/disponibles"
                    Match="NavLinkMatch.Prefix"
                    Class="nav-link"
                    ActiveClass="nav-link nav-link-active">
            <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
                <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
                    <MudIcon Icon="@Icons.Material.Filled.Assignment" />
                    <MudText Typo="Typo.body1">Pedidos disponibles</MudText>
                </MudStack>
                @if (_pendingCount > 0)
                {
                    <MudBadge Color="Color.Primary" Content="@_pendingCount" />
                }
            </MudStack>
        </MudNavLink>

        <MudNavLink Href="/pedidos/activos"
                    Match="NavLinkMatch.Prefix"
                    Class="nav-link"
                    ActiveClass="nav-link nav-link-active">
            <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
                <MudStack Row="true" AlignItems="AlignItems.Center" Spacing="2">
                    <MudIcon Icon="@Icons.Material.Filled.LocalShipping" />
                    <MudText Typo="Typo.body1">Mis pedidos</MudText>
                </MudStack>
                @if (_activeCount > 0)
                {
                    <MudBadge Color="Color.Success" Content="@_activeCount" />
                }
            </MudStack>
        </MudNavLink>
    </MudNavMenu>
}

@code {
    private int _pendingCount;
    private int _activeCount;

    protected override async Task OnInitializedAsync()
    {
        await LoadCountsAsync();
        PedidosService.OrdersUpdated += HandleOrdersUpdated;
    }

    private async Task LoadCountsAsync()
    {
        _pendingCount = AuthState.IsAuthenticated ? (await PedidosService.GetPendingOrdersAsync()).Count : 0;
        _activeCount = AuthState.IsAuthenticated ? (await PedidosService.GetAcceptedOrdersAsync()).Count : 0;
        if (AuthState.IsAuthenticated)
        {
            await InvokeAsync(StateHasChanged);
        }
    }

    private async void HandleOrdersUpdated()
    {
        await LoadCountsAsync();
    }

    public void Dispose()
    {
        PedidosService.OrdersUpdated -= HandleOrdersUpdated;
    }
}
